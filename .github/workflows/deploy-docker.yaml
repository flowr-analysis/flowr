name: "Deploy Docker"

'on':
  workflow_call:
    inputs:
      addToRelease:
        description: "Should the docker image be added to the latest release?"
        required: false
        type: boolean
        default: true


concurrency:
  group: docker-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  doc:
    name: "Build and Deploy the flowR Docker Container"
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
        with:
          lfs: false
          submodules: true

      - name: Do pull to ensure up-to-date
        run: git pull

      - name: Build the image
        run: docker build -t flowr -f scripts/Dockerfile .

      - name: Test that the image works
        timeout-minutes: 5
        run: |
          docker run --rm flowr --version

      - name: Deploy the image
        run: |
          TAG="eagleoutice/flowr"
          VERSION="$(date '+%Y%m%d')"
          FLOWR_VERSION="$(docker run --rm flowr --version |  grep -oP 'flowR:\s*\K[^ ]+')"
          docker tag flowr "${TAG}":"date-$VERSION"
          docker tag flowr "${TAG}":"$FLOWR_VERSION"
          docker tag flowr "${TAG}":latest
          docker images "$TAG"
          echo ${{ secrets.DH_PASSWD }} | docker login -u ${{ secrets.DH_NAME }} --password-stdin
          docker push "$TAG" --all-tags
          echo "THE_FLOWR_VERSION=$FLOWR_VERSION" >> "$GITHUB_ENV"
          
      - name: Compress the image
        run: |
          docker save flowr | gzip > "./flowr-$THE_FLOWR_VERSION.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add to release
        if: ${{ github.event.inputs.addToRelease }}
        uses: alexellis/upload-assets@0.4.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["./flowr-*.tar.gz"]'
          
