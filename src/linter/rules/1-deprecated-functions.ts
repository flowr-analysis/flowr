import type { LintingResult, LintingRule } from '../linter-format';
import { LintingCertainty, LintingPrintStyle } from '../linter-format';
import { Q } from '../../search/flowr-search-builder';
import type { MergeableRecord } from '../../util/objects';
import { formatRange } from '../../util/mermaid/dfg';
import { Enrichment, enrichmentContent } from '../../search/search-executor/search-enrichers';
import type { SourceRange } from '../../util/range';
import type { Identifier } from '../../dataflow/environments/identifier';

export interface DeprecatedFunctionsResult extends LintingResult {
	function: string
	range:    SourceRange
}

export interface DeprecatedFunctionsConfig extends MergeableRecord {
	deprecatedFunctions: string[]
}

export const R1_DEPRECATED_FUNCTIONS = {
	name:                'deprecated-functions',
	createSearch:        () => Q.all().with(Enrichment.CallTargets),
	processSearchResult: (elements, config) => elements.getElements()
		.flatMap(element => {
			const targets = enrichmentContent(element, Enrichment.CallTargets).targets;
			// if there is a call target that is not built-in (ie a custom function), we don't want to mark it as deprecated
			// eventually we'd want to solve this with an argument to the CallTargets enrichment like satisfiesCallTargets does!
			if(targets.some(t => typeof t !== 'string')) {
				return [];
			}
			return targets.map(target => {
				return ({
					range:  element.node.info.fullRange as SourceRange,
					target: target as Identifier
				});
			});
		})
		.filter(element => config.deprecatedFunctions.includes(element.target))
		.map(element => ({
			certainty: LintingCertainty.Maybe,
			function:  element.target,
			range:     element.range
		})),
	printers: {
		[LintingPrintStyle.Text]: result => `Function ${result.function} at ${formatRange(result.range)}`,
		[LintingPrintStyle.Json]: result => JSON.stringify(result)
	},
	defaultConfig: {
		// this layout is temporary and currently just a dump from a helper script
		deprecatedFunctions: [
			'infer_type',
			'buffering',
			'envBlock',
			'rangeExplorer',
			'spatialAutoRange',
			'spatialBlock',
			'tidy.table',
			'tidy.data.frame',
			'augment.data.frame',
			'glance.data.frame',
			'bootstrap',
			'fix_data_frame',
			'tidy.summaryDefault',
			'glance.summaryDefault',
			'tidy.ftable',
			'tidy.density',
			'tidy.dist',
			'tidy.numeric',
			'tidy.character',
			'tidy.logical',
			'confint_tidy',
			'finish_glance',
			'gs_local_dir',
			'cross_validate',
			'test_file',
			'test_coverage_file',
			'grid_max_entropy',
			'all_equal',
			'arrange_all',
			'distinct_all',
			'filter_all',
			'group_by_all',
			'summarise_all',
			'mutate_all',
			'select_all',
			'vars',
			'all_vars',
			'id',
			'failwith',
			'select_vars',
			'rename_vars',
			'select_var',
			'current_vars',
			'bench_tbls',
			'compare_tbls',
			'compare_tbls2',
			'eval_tbls',
			'eval_tbls2',
			'location',
			'changes',
			'combine',
			'do',
			'funs',
			'add_count_',
			'add_tally_',
			'arrange_',
			'count_',
			'distinct_',
			'do_',
			'filter_',
			'funs_',
			'group_by_',
			'group_indices_',
			'mutate_',
			'tally_',
			'transmute_',
			'rename_',
			'rename_vars_',
			'select_',
			'select_vars_',
			'slice_',
			'summarise_',
			'summarize_',
			'summarise_each',
			'src_local',
			'tbl_df',
			'add_rownames',
			'group_nest',
			'group_split',
			'with_groups',
			'nest_by',
			'progress_estimated',
			'recode',
			'sample_n',
			'summarise',
			'top_n',
			'transmute',
			'get_mfa_quanti_var',
			'get_mfa_quali_var',
			'get_mfa_group',
			'fviz_mfa_ind_starplot',
			'fviz_mfa_group',
			'fviz_mfa_quanti_var',
			'fviz_mfa_quali_var',
			'get_hmfa_quanti_var',
			'get_hmfa_quali_var',
			'get_hmfa_group',
			'fviz_hmfa_quanti_var',
			'fviz_hmfa_quali_var',
			'fviz_hmfa_ind_starplot',
			'fviz_hmfa_group',
			'add_shap',
			'plot_counts',
			'fct_explicit_na',
			'arima.errors',
			'baggedModel',
			'residuals.forecast',
			'seasonaldummy',
			'fourier',
			'hclust2',
			'get_cloudmademap',
			'ggmapplot',
			'aes_',
			'aes_auto',
			'annotation_logticks',
			'coord_flip',
			'coord_map',
			'fortify',
			'guide_train',
			'qplot',
			'gg_dep',
			'add_guide_axis',
			'add_guide_legend',
			'h2o.saveMojo',
			'h2o.importFile',
			'hctreemap',
			'hc_labels',
			'parse_http_date',
			'guess_media',
			'graph.adjacency',
			'as_phylo',
			'assortativity.nominal',
			'assortativity.degree',
			'set.vertex.attribute',
			'set.graph.attribute',
			'set.edge.attribute',
			'remove.vertex.attribute',
			'remove.graph.attribute',
			'remove.edge.attribute',
			'list.vertex.attributes',
			'list.graph.attributes',
			'list.edge.attributes',
			'is.weighted',
			'is.named',
			'is.bipartite',
			'get.vertex.attribute',
			'get.graph.attribute',
			'get.edge.attribute',
			'is.igraph',
			'get.edge',
			'bipartite.projection.size',
			'bipartite.projection',
			'bipartite.mapping',
			'subgraph.centrality',
			'page.rank',
			'hub.score',
			'authority.score',
			'graph.strength',
			'graph.eigen',
			'graph.diversity',
			'evcent',
			'edge.betweenness',
			'bonpow',
			'alpha.centrality',
			'estimate_betweenness',
			'estimate_edge_betweenness',
			'estimate_closeness',
			'centralize.scores',
			'centralization.evcent.tmax',
			'centralization.evcent',
			'centralization.degree.tmax',
			'centralization.degree',
			'centralization.closeness.tmax',
			'centralization.closeness',
			'centralization.betweenness.tmax',
			'centralization.betweenness',
			'maximal.independent.vertex.sets',
			'maximal.cliques.count',
			'maximal.cliques',
			'largest.independent.vertex.sets',
			'largest.cliques',
			'independent.vertex.sets',
			'independence.number',
			'clique.number',
			'maximal_ivs',
			'exportPajek',
			'plotHierarchy',
			'maxcohesion',
			'graph.cohesion',
			'cohesive.blocks',
			'blockGraphs',
			'create.communities',
			'walktrap.community',
			'spinglass.community',
			'showtrace',
			'optimal.community',
			'multilevel.community',
			'mod.matrix',
			'leading.eigenvector.community',
			'label.propagation.community',
			'is.hierarchical',
			'infomap.community',
			'fastgreedy.community',
			'edge.betweenness.community',
			'dendPlot',
			'cutat',
			'contract.vertices',
			'code.length',
			'no.clusters',
			'decompose.graph',
			'cluster.distribution',
			'biconnected.components',
			'articulation.points',
			'igraph.console',
			'igraph.to.graphNEL',
			'igraph.from.graphNEL',
			'graph.adjlist',
			'get.incidence',
			'get.edgelist',
			'get.data.frame',
			'get.adjacency',
			'get.adjlist',
			'get.adjedgelist',
			'as_adj',
			'as_incidence_matrix',
			'as.directed',
			'as.undirected',
			'graph.edgelist',
			'graph.data.frame',
			'is.chordal',
			'is.graphical.degree.sequence',
			'is.degree.sequence',
			'igraphdemo',
			'power.law.fit',
			'vertex.disjoint.paths',
			'vertex.connectivity',
			'stMincuts',
			'stCuts',
			'minimum.size.separators',
			'minimal.st.separators',
			'is.separator',
			'is.minimal.separator',
			'graph.mincut',
			'graph.maxflow',
			'graph.adhesion',
			'edge.disjoint.paths',
			'edge.connectivity',
			'dominator.tree',
			'write.graph',
			'read.graph',
			'graph.graphdb',
			'graph_from_graphdb',
			'watts.strogatz.game',
			'static.power.law.game',
			'static.fitness.game',
			'sbm.game',
			'preference.game',
			'lastcit.game',
			'k.regular.game',
			'interconnected.islands.game',
			'grg.game',
			'growing.random.game',
			'forest.fire.game',
			'establishment.game',
			'degree.sequence.game',
			'connect.neighborhood',
			'citing.cited.type.game',
			'cited.type.game',
			'callaway.traits.game',
			'bipartite.random.game',
			'barabasi.game',
			'ba.game',
			'asymmetric.preference.game',
			'aging.barabasi.game',
			'aging.ba.game',
			'aging.prefatt.game',
			'erdos.renyi.game',
			'graphlets.project',
			'graphlets.candidate.basis',
			'hrg.predict',
			'hrg.fit',
			'hrg.game',
			'hrg.dendrogram',
			'hrg.create',
			'hrg.consensus',
			'graph.incidence',
			'from_incidence_matrix',
			'graph_from_incidence_matrix',
			'is.directed',
			'delete.vertices',
			'delete.edges',
			'add.vertices',
			'add.edges',
			'get.edge.ids',
			'piecewise.layout',
			'layout.sugiyama',
			'layout.star',
			'layout.norm',
			'layout.merge',
			'layout.mds',
			'layout.grid',
			'layout.graphopt',
			'layout.gem',
			'layout.davidson.harel',
			'layout.bipartite',
			'layout.auto',
			'layout.reingold.tilford',
			'layout.circle',
			'layout.grid.3d',
			'layout.sphere',
			'layout.random',
			'layout.fruchterman.reingold',
			'layout.kamada.kawai',
			'layout.lgl',
			'layout.spring',
			'layout.svd',
			'layout.fruchterman.reingold.grid',
			'layout.drl',
			'graph',
			'graph.famous',
			'line.graph',
			'graph.ring',
			'graph.tree',
			'graph.star',
			'graph.lcf',
			'graph.lattice',
			'graph.kautz',
			'graph.full.citation',
			'graph.full.bipartite',
			'graph.full',
			'graph.formula',
			'graph.extended.chordal.ring',
			'graph.empty',
			'graph.de.bruijn',
			'graph.bipartite',
			'graph.atlas',
			'minimum.spanning.tree',
			'triad.census',
			'graph.motifs.no',
			'graph.motifs.est',
			'graph.motifs',
			'dyad.census',
			'graph.intersection',
			'graph.union',
			'graph.difference',
			'graph.disjoint.union',
			'graph.compose',
			'graph.complementer',
			'running.mean',
			'igraph.sample',
			'convex.hull',
			'igraph.options',
			'getIgraphOpt',
			'path.length.hist',
			'maximum.cardinality.search',
			'is.dag',
			'autocurve.edges',
			'igraph.shape.noplot',
			'igraph.shape.noclip',
			'vertex.shapes',
			'add.vertex.shape',
			'print.igraph',
			'similarity.jaccard',
			'similarity.dice',
			'similarity.invlogweighted',
			'is.simple',
			'get.stochastic',
			'get.shortest.paths',
			'get.all.shortest.paths',
			'get.diameter',
			'unfold.tree',
			'topological.sort',
			'shortest.paths',
			'neighborhood.size',
			'maximum.bipartite.matching',
			'is.mutual',
			'is.multiple',
			'is.maximal.matching',
			'is.matching',
			'is.loop',
			'is.connected',
			'induced.subgraph',
			'has.multiple',
			'graph.neighborhood',
			'graph.laplacian',
			'graph.knn',
			'graph.dfs',
			'graph.density',
			'graph.coreness',
			'graph.bfs',
			'farthest.nodes',
			'degree.distribution',
			'count.multiple',
			'clusters',
			'average.path.length',
			'subgraph',
			'subgraph.edges',
			'are.connected',
			'igraph.version',
			'tkplot.setcoords',
			'tkplot.rotate',
			'tkplot.reshape',
			'tkplot.off',
			'tkplot.getcoords',
			'tkplot.fit.to.screen',
			'tkplot.export.postscript',
			'tkplot.close',
			'tkplot.center',
			'tkplot.canvas',
			'permute.vertices',
			'graph.isocreate',
			'graph.automorphisms',
			'canonical.permutation',
			'automorphisms',
			'adjacent.triangles',
			'Partial',
			'crosstab',
			'adorn_crosstab',
			'add_totals_row',
			'add_totals_col',
			'use_first_valid_of',
			'convert_to_NA',
			'remove_empty_rows',
			'remove_empty_cols',
			'kRp_tagged',
			'kRp_txt_freq',
			'kRp_txt_trans',
			'kRp_analysis',
			'kRp.filter.wclass',
			'kRp.text.paste',
			'read.tagged',
			'kRp.text.transform',
			'lm.mids',
			'glm.mids',
			'.pmm.match',
			'parlmice',
			'pool.compare',
			'mlogit.data',
			'mFormula',
			'mFormula.formula',
			'mFormula.default',
			'model.matrix.mFormula',
			'is.mFormula',
			'index.dfidx',
			'index.mlogit',
			'vcov.mlogit',
			'cor.mlogit',
			'compute',
			'odbcConnectionIcon',
			'odbcConnectionActions',
			'odbcConnectionColumns',
			'fit_control',
			'req_pkgs',
			'surv_reg',
			'varying',
			'varying_args.model_spec',
			'plotly_POST',
			'get_figure',
			'plotly',
			'offline',
			'as.widget',
			'export',
			'orca',
			'liply',
			'isplit2',
			'list_along',
			'cross',
			'invoke',
			'at_depth',
			'prepend',
			'rerun',
			'splice',
			'`%@%`',
			'rbernoulli',
			'rdunif',
			'when',
			'update_list',
			'map_raw',
			'accumulate',
			'reduce_right',
			'flatten',
			'map_dfr',
			'as_vector',
			'transpose',
			'melt_delim',
			'melt_fwf',
			'melt_table',
			'read_table2',
			'step_bagimpute',
			'step_knnimpute',
			'step_lowerimpute',
			'step_medianimpute',
			'step_meanimpute',
			'step_modeimpute',
			'step_rollimpute',
			'terms_select',
			'ellipse_check',
			'step_nnmf',
			'juice',
			'epsilonGreedyActionSelection',
			'randomActionSelection',
			'experienceReplay',
			'policy',
			'isIdCurrent',
			'roxy_tag',
			'validation_split',
			'setSnnsRSeedValue',
			'isIdCurrent',
			'html_encoding_guess',
			'repair_encoding',
			'date_breaks',
			'trans_breaks',
			'cbreaks',
			'pretty_breaks',
			'dollar_format',
			'date_format',
			'parse_format',
			'label_number_si',
			'comma',
			'ordinal_format',
			'percent_format',
			'pvalue_format',
			'scientific_format',
			'wrap_format',
			'number_bytes_format',
			'trans_format',
			'unit_format',
			'format_format',
			'str_interp',
			'kRp_hyph_pat',
			'train',
			'train_and_evaluate',
			'as_tibble',
			'data_frame',
			'tibble_',
			'data_frame_',
			'lst_',
			'as_data_frame',
			'as.tibble',
			'frame_data',
			'trunc_mat',
			'is.tibble',
			'tidy_names',
			'set_tidy_names',
			'repair_names',
			'extract_numeric',
			'complete_',
			'drop_na_',
			'expand_',
			'crossing_',
			'nesting_',
			'extract_',
			'fill_',
			'gather_',
			'nest_',
			'separate_rows_',
			'separate_',
			'spread_',
			'unite_',
			'unnest_',
			'extract',
			'gather',
			'nest_legacy',
			'separate_rows',
			'separate',
			'spread',
			'reorder_within',
			'unnest_tweets',
			'use_lifecycle',
			'git_branch_default',
			'use_rscloud_badge',
			'use_tidy_eval',
			'use_github_actions',
			'aggr',
			'barMiss',
			'colormapMiss',
			'growdotMiss',
			'histMiss',
			'marginplot',
			'matrixplot',
			'parcoordMiss',
			'pbox',
			'scattJitt',
			'scattmatrixMiss',
			'spineMiss',
			'dots_to_estimate',
			'metric_summarizer',
			'metric_vec_template',
		]
	}
} as const satisfies LintingRule<DeprecatedFunctionsResult, DeprecatedFunctionsConfig>;
